{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-JS\\\\Social_Network\\\\Network\\\\src\\\\users\\\\UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../components/common/preloader/Preloader\";\nimport { follow, getUsers, setCurrentPage, toogleFollowingProgress, unfollow } from \"../Redux/usersReducer\";\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    };\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      setTotalUsersCount: this.props.setTotalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      totalUsersCount: this.props.totalUsersCount,\n      isFetching: this.props.isFetching,\n      followingInProgress: this.props.followingInProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.userPage.users,\n    pageSize: state.userPage.pageSize,\n    totalUsersCount: state.userPage.totalUsersCount,\n    currentPage: state.userPage.currentPage,\n    isFetching: state.userPage.isFetching,\n    followingInProgress: state.userPage.followingInProgress\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toogleFollowingProgress,\n  getUsers\n}))(UsersContainer);","map":{"version":3,"sources":["D:\\React-JS\\Social_Network\\Network\\src\\users\\UsersContainer.js"],"names":["React","connect","Users","Preloader","follow","getUsers","setCurrentPage","toogleFollowingProgress","unfollow","withAuthRedirect","compose","UsersContainer","Component","componentDidMount","props","currentPage","pageSize","onPageChanged","pageNumber","render","isFetching","setTotalUsersCount","users","totalUsersCount","followingInProgress","mapStateToProps","state","userPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,cAA1B,EAA0CC,uBAA1C,EAAmEC,QAAnE,QAAkF,uBAAlF;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SACzCC,iBADyC,GACrB,MAAM;AACtB,WAAKC,KAAL,CAAWT,QAAX,CAAoB,KAAKS,KAAL,CAAWC,WAA/B,EAA4C,KAAKD,KAAL,CAAWE,QAAvD;AACH,KAHwC;;AAAA,SAKzCC,aALyC,GAK1BC,UAAD,IAAc;AACxB,WAAKJ,KAAL,CAAWT,QAAX,CAAoBa,UAApB,EAAgC,KAAKJ,KAAL,CAAWE,QAA3C;AACH,KAPwC;AAAA;;AASzCG,EAAAA,MAAM,GAAM;AAED,WACI,0CACQ,KAAKL,KAAL,CAAWM,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IAD/C,EAGI,oBAAC,KAAD;AAAO,MAAA,kBAAkB,EAAE,KAAKN,KAAL,CAAWO,kBAAtC;AACO,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKE,aAH3B;AAIO,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWQ,KAJzB;AAKO,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWV,MAL1B;AAMO,MAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWN,QAN5B;AAOO,MAAA,eAAe,EAAE,KAAKM,KAAL,CAAWS,eAPnC;AAQO,MAAA,UAAU,EAAE,KAAKT,KAAL,CAAWM,UAR9B;AASO,MAAA,mBAAmB,EAAE,KAAKN,KAAL,CAAWU,mBATvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAiBV;;AA5BwC;;AA8B7C,IAAIC,eAAe,GAAIC,KAAD,IAAU;AAC5B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,QAAN,CAAeL,KADnB;AAEHN,IAAAA,QAAQ,EAAEU,KAAK,CAACC,QAAN,CAAeX,QAFtB;AAGHO,IAAAA,eAAe,EAAEG,KAAK,CAACC,QAAN,CAAeJ,eAH7B;AAIHR,IAAAA,WAAW,EAAEW,KAAK,CAACC,QAAN,CAAeZ,WAJzB;AAKHK,IAAAA,UAAU,EAAEM,KAAK,CAACC,QAAN,CAAeP,UALxB;AAMHI,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,QAAN,CAAeH;AANjC,GAAP;AASH,CAVD;;AAYA,eAAed,OAAO,CAClBD,gBADkB,EAElBR,OAAO,CAACwB,eAAD,EACP;AAACrB,EAAAA,MAAD;AAASI,EAAAA,QAAT;AACIF,EAAAA,cADJ;AACmBC,EAAAA,uBADnB;AAEIF,EAAAA;AAFJ,CADO,CAFW,CAAP,CAMPM,cANO,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\nimport {follow, getUsers, setCurrentPage, toogleFollowingProgress, unfollow} from \"../Redux/usersReducer\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount = () => {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged=(pageNumber)=>{\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render  ()  {\r\n\r\n               return (\r\n                   <>\r\n                          {this.props.isFetching ? <Preloader/> : null }\r\n\r\n                       <Users setTotalUsersCount={this.props.setTotalUsersCount}\r\n                              pageSize={this.props.pageSize}\r\n                              currentPage={this.props.currentPage}\r\n                              onPageChanged={this.onPageChanged}\r\n                              users={this.props.users}\r\n                              follow={this.props.follow}\r\n                              unfollow={this.props.unfollow}\r\n                              totalUsersCount={this.props.totalUsersCount}\r\n                              isFetching={this.props.isFetching}\r\n                              followingInProgress={this.props.followingInProgress}\r\n                       />\r\n                   </>\r\n        )\r\n    }}\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        users: state.userPage.users,\r\n        pageSize: state.userPage.pageSize,\r\n        totalUsersCount: state.userPage.totalUsersCount,\r\n        currentPage: state.userPage.currentPage,\r\n        isFetching: state.userPage.isFetching,\r\n        followingInProgress: state.userPage.followingInProgress,\r\n\r\n    };\r\n};\r\n\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n    {follow, unfollow,\r\n        setCurrentPage,toogleFollowingProgress,\r\n        getUsers\r\n    }))(UsersContainer)"]},"metadata":{},"sourceType":"module"}