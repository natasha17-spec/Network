{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-JS\\\\Social_Network\\\\Network\\\\src\\\\components\\\\common\\\\FormsControl2\\\\FormsControl2.jsx\";\nimport React from 'react';\nimport styles from '../FormsControls/FormsControls.module.css';\n\nconst FormControl = ({\n  input,\n  meta,\n  ...props\n}) => {\n  let {\n    touched,\n    error\n  } = meta;\n  let hasError = touched && error;\n  return React.createElement(\"div\", {\n    className: styles.formControl + ' ' + (hasError ? styles.error : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.children), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, hasError && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, error)));\n};\n\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return React.createElement(FormControl, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"textarea\", Object.assign({}, input, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return React.createElement(FormControl, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, input, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["D:/React-JS/Social_Network/Network/src/components/common/FormsControl2/FormsControl2.jsx"],"names":["React","styles","FormControl","input","meta","props","touched","error","hasError","formControl","children","Textarea","restProps","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;;AACA,MAAOC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AAC9C,MAAI;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBH,IAAvB;AACA,MAAII,QAAQ,GAAIF,OAAO,IAAIC,KAA3B;AACA,SACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACQ,WAAP,GAAqB,GAArB,IAA4BD,QAAQ,GAAGP,MAAM,CAACM,KAAV,GAAkB,EAAtD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACK,QADX,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAP,CADlB,CAJJ,CADJ;AAUH,CAbD;;AAeA,OAAO,MAAMI,QAAQ,GAAIN,KAAD,IAAW;AAC/B,QAAM;AAACF,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAc,OAAGQ;AAAjB,MAA8BP,KAApC;AACA,SAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACH,kDAAeF,KAAf,EAA0BS,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADG,CAAP;AAGH,CALM;AAOP,OAAO,MAAMC,KAAK,GAAIR,KAAD,IAAW;AAC5B,QAAM;AAACF,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAc,OAAGQ;AAAjB,MAA8BP,KAApC;AACA,SAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACH,+CAAYF,KAAZ,EAAuBS,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADG,CAAP;AAGH,CALM","sourcesContent":["import React from 'react'\r\nimport styles from '../FormsControls/FormsControls.module.css'\r\nconst  FormControl = ({input, meta, ...props}) => {\r\n    let {touched, error} = meta;\r\n    let hasError =  touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <p>\r\n                {props.children}\r\n            </p>\r\n            <p>\r\n                { hasError && <span>{error}</span> }\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea  {...input} {...restProps} />\r\n    </FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input  {...input} {...restProps} />\r\n    </FormControl>\r\n};\r\n"]},"metadata":{},"sourceType":"module"}