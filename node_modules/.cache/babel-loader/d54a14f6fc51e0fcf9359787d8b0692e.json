{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-JS\\\\Social_Network\\\\Network\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return React.createElement(Redirect, {\n        to: '/login',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectAuthRedirectComponent;\n};","map":{"version":3,"sources":["D:/React-JS/Social_Network/Network/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props","ConnectAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAU;AACvCC,EAAAA,MAAM,EAACD,KAAK,CAACE,IAAN,CAAWD;AADqB,CAAV,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAa;AACzC,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAA+C;AAC3CE,IAAAA,MAAM,GAAE;AACJ,UAAG,CAAC,KAAKC,KAAL,CAAWN,MAAf,EAAsB,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACtB,aAAO,oBAAC,SAAD,oBAAc,KAAKM,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAJ0C;;AAO/C,MAAIC,4BAA4B,GAACV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAAjC;AACA,SAAOG,4BAAP;AACH,CAVM","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=>({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth)return <Redirect to={'/login'}/>;\r\n            return <Component{...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n};"]},"metadata":{},"sourceType":"module"}