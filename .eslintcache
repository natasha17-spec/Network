[{"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\index.tsx":"1","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\serviceWorker.ts":"2","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\redux-store.ts":"3","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\App.tsx":"4","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\NavBarReducer.ts":"5","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\DialogsReducer.ts":"6","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\ProfileReducer.ts":"7","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\UsersReducer.ts":"8","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\AuthReducer.ts":"9","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\App-reducer.ts":"10","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\hoc\\withSuspense.tsx":"11","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileContainer.tsx":"12","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\login\\login.tsx":"13","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n4_News\\News.tsx":"14","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n3_Music\\Music.tsx":"15","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n5_Settings\\Settings.tsx":"16","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\DialogsContainer.tsx":"17","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n1_Path\\Path.tsx":"18","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\common\\preloader\\Preloader.tsx":"19","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\profile-api.ts":"20","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\api.ts":"21","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\users-api.ts":"22","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\auth-api.ts":"23","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\security-api.ts":"24","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\utils\\objects-helper.ts":"25","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\utils\\validatos\\validators.ts":"26","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\Users.tsx":"27","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\header\\Header.tsx":"28","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\Profile.tsx":"29","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\hoc\\withAuthRedirect.tsx":"30","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\users-selector.tsx":"31","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\Dialogs.tsx":"32","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\common\\FormsControls\\FormsControls.tsx":"33","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\User.tsx":"34","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\UsersSearchForm.tsx":"35","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"36","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\common\\Paginator\\Paginator.tsx":"37","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"38","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\Dialogitem\\Dialogitem.tsx":"39","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\Message\\Message.tsx":"40","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\AddMessageForm\\AddMessageForm.tsx":"41","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"42","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"43","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"44","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx":"45","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"46","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\UsersPage.tsx":"47","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\auth-selector.tsx":"48"},{"size":695,"mtime":1609578024811,"results":"49","hashOfConfig":"50"},{"size":4275,"mtime":1609578024814,"results":"51","hashOfConfig":"50"},{"size":1387,"mtime":1609578024814,"results":"52","hashOfConfig":"50"},{"size":7132,"mtime":1615534746668,"results":"53","hashOfConfig":"50"},{"size":349,"mtime":1609578024813,"results":"54","hashOfConfig":"50"},{"size":1426,"mtime":1609578024812,"results":"55","hashOfConfig":"50"},{"size":4511,"mtime":1609578024813,"results":"56","hashOfConfig":"50"},{"size":4764,"mtime":1610906046821,"results":"57","hashOfConfig":"50"},{"size":3142,"mtime":1609578024812,"results":"58","hashOfConfig":"50"},{"size":1153,"mtime":1609578024812,"results":"59","hashOfConfig":"50"},{"size":349,"mtime":1609580942526,"results":"60","hashOfConfig":"50"},{"size":2648,"mtime":1612620830974,"results":"61","hashOfConfig":"50"},{"size":2721,"mtime":1612606925414,"results":"62","hashOfConfig":"50"},{"size":157,"mtime":1609578024808,"results":"63","hashOfConfig":"50"},{"size":165,"mtime":1609578024807,"results":"64","hashOfConfig":"50"},{"size":172,"mtime":1609578024808,"results":"65","hashOfConfig":"50"},{"size":547,"mtime":1609578024807,"results":"66","hashOfConfig":"50"},{"size":1119,"mtime":1609578024805,"results":"67","hashOfConfig":"68"},{"size":190,"mtime":1609578024802,"results":"69","hashOfConfig":"50"},{"size":1110,"mtime":1609578024793,"results":"70","hashOfConfig":"50"},{"size":659,"mtime":1609578024792,"results":"71","hashOfConfig":"50"},{"size":659,"mtime":1609694729801,"results":"72","hashOfConfig":"50"},{"size":804,"mtime":1609578024792,"results":"73","hashOfConfig":"50"},{"size":261,"mtime":1609578024793,"results":"74","hashOfConfig":"50"},{"size":258,"mtime":1609578024815,"results":"75","hashOfConfig":"50"},{"size":399,"mtime":1609578024816,"results":"76","hashOfConfig":"50"},{"size":3210,"mtime":1612707760023,"results":"77","hashOfConfig":"50"},{"size":2119,"mtime":1616952895219,"results":"78","hashOfConfig":"50"},{"size":892,"mtime":1609580551453,"results":"79","hashOfConfig":"50"},{"size":896,"mtime":1609578024810,"results":"80","hashOfConfig":"50"},{"size":921,"mtime":1609697531812,"results":"81","hashOfConfig":"50"},{"size":1410,"mtime":1609578024806,"results":"82","hashOfConfig":"50"},{"size":1833,"mtime":1609578024801,"results":"83","hashOfConfig":"50"},{"size":2151,"mtime":1615531250652,"results":"84","hashOfConfig":"50"},{"size":2005,"mtime":1612707334060,"results":"85","hashOfConfig":"50"},{"size":548,"mtime":1609580942544,"results":"86","hashOfConfig":"50"},{"size":1950,"mtime":1609578024802,"results":"87","hashOfConfig":"50"},{"size":5435,"mtime":1616957749648,"results":"88","hashOfConfig":"50"},{"size":413,"mtime":1609578024806,"results":"89","hashOfConfig":"50"},{"size":253,"mtime":1609578024807,"results":"90","hashOfConfig":"50"},{"size":1029,"mtime":1609578024805,"results":"91","hashOfConfig":"50"},{"size":1875,"mtime":1589434812000,"results":"92","hashOfConfig":"50"},{"size":1181,"mtime":1589434812000,"results":"93","hashOfConfig":"50"},{"size":1032,"mtime":1609580942556,"results":"94","hashOfConfig":"50"},{"size":949,"mtime":1609580095191,"results":"95","hashOfConfig":"50"},{"size":464,"mtime":1589434812000,"results":"96","hashOfConfig":"50"},{"size":408,"mtime":1612605620817,"results":"97","hashOfConfig":"50"},{"size":223,"mtime":1616952029980,"results":"98","hashOfConfig":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1w8x9fk",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"6gb5s9",{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"101"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"101"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"101"},"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\index.tsx",[],["207","208"],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\serviceWorker.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\redux-store.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\App.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\NavBarReducer.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\DialogsReducer.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\ProfileReducer.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\UsersReducer.ts",["209"],"import {UserType} from '../types/types'\r\nimport {BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {Dispatch} from 'redux'\r\nimport {usersAPI} from '../api/users-api'\r\nimport {updateObjectInArray} from \"../utils/objects-helper\";\r\n\r\nexport let initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array of users ids\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialState => {\r\n    switch (action.type) {\r\n        case     'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/SET_FILTER': {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'SN/USERS/SET_FILTER', payload: filter} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(page))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term,filter.friend)\r\n        dispatch(actions.toggleIsFetching(false))\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                   userId: number,\r\n                                   apiMethod: any,\r\n                                   actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n\r\nexport type InitialState = typeof initialState;\r\nexport type FilterType = typeof initialState.filter;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\AuthReducer.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\App-reducer.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\hoc\\withSuspense.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileContainer.tsx",["210","211"],"import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {AppStateType} from '../../redux/redux-store';\nimport {ProfileType} from '../../types/types';\n// @ts-ignore\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/ProfileReducer\";\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    getUserProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n    savePhoto: (file: File) => void\n    saveProfile: (profile: ProfileType) => Promise<any>\n}\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\n\n\nclass ProfileContainer extends React.Component<PropsType> {\n    constructor(props: PropsType) {\n        super(props);\n    }\n\n    refreshProfile() {\n        let userId: number | null = +this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                // todo: may be replace push with Redirect??\n                this.props.history.push(\"/login\");\n            }\n        }\n\n        if (!userId) {\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\n        } else {\n            this.props.getUserProfile(userId)\n            this.props.getStatus(userId)\n        }\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\login\\login.tsx",["212","213"],"import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validatos/validators\";\r\nimport {createField, GetStringKeys, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {login} from \"../../redux/AuthReducer\";\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType>> = ({handleSubmit, error}) => {\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n    return (\r\n        <div className={styles.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\r\n                {createField<LoginFormValuesTypeKeys>(\"Email\", \"password\", [required], Input, {type: \"password\"})}\r\n                <div>\r\n                    {createField<LoginFormValuesTypeKeys>(undefined, \"remember_me\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n                </div>\r\n                <div className={styles.captcha}>\r\n                    {captchaUrl && <img src={captchaUrl}/>}\r\n                    {captchaUrl && createField(\r\n                        \"symbols\",\r\n                        \"captcha\",\r\n                        [required],\r\n                        Input)}\r\n                </div>\r\n                {error &&\r\n                <div className={styles.formSummaryContainer}>\r\n                    <div className={styles.formSummaryError}>{error}</div>\r\n                </div>\r\n                }\r\n                <div className={styles.formOnButton}>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType>({form: 'login'})(LoginForm);\r\n\r\n\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: string\r\n}\r\n\r\nexport type LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\n\r\nexport const Login: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div className={styles.login}>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm  onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n4_News\\News.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n3_Music\\Music.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n5_Settings\\Settings.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\DialogsContainer.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n1_Path\\Path.tsx",[],["214","215"],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\common\\preloader\\Preloader.tsx",["216"],"import photo from \"../../../assets/Spinner-1.svg\";\r\nimport React from 'react';\r\n\r\nlet Preloader = () =>{\r\n    return <img src={photo} className='downloader'/>\r\n};\r\nexport default Preloader\r\n","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\profile-api.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\api.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\users-api.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\auth-api.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\api\\security-api.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\utils\\objects-helper.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\utils\\validatos\\validators.ts",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\Users.tsx",["217","218"],"import React, {useEffect} from 'react';\r\nimport User from \"./User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport s from \"./Users.module.css\"\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {FilterType, requestUsers} from \"../../redux/UsersReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getsUsers,\r\n    getTotalUsersCount,\r\n    getUsersFilter\r\n} from \"../../redux/users-selector\";\r\nimport * as queryString from \"querystring\";\r\n\r\n\r\nexport const Users: React.FC = () => {\r\n\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const users = useSelector(getsUsers)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter));\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(currentPage, pageSize, filter))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    const history = useHistory()\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1))\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch(parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case \"false\":\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        history.push({\r\n            pathname:'/users',\r\n            search:`?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    },[filter,currentPage])\r\n\r\n    return <div className={s.container}>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n        <Paginator currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}/>\r\n\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={unfollow}\r\n                                     follow={follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\header\\Header.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\users-selector.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\Dialogs.tsx",["219"],"import React from 'react';\r\nimport p from './Dialogs.module.css'\r\nimport DialogItem from \"./Dialogitem/Dialogitem\";\r\nimport Message from \"./Message/Message\";\r\nimport {InitialStateType} from \"../../../redux/DialogsReducer\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\ntype PropsType = {\r\n    dialogsPage:InitialStateType\r\n    sendMessage:(newMessageText:string)=>void\r\n}\r\n\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody:  string\r\n}\r\n\r\n\r\nconst Dialogs:React.FC<PropsType> = (props) => {\r\n    let state= props.dialogsPage;\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n\r\n    let addNewMessage=(values:NewMessageFormValuesType)=>{\r\n        props.sendMessage(values.newMessageBody);\r\n        values.newMessageBody=\"\"\r\n    };\r\n\r\n\r\n    // @ts-ignore\r\n    // @ts-ignore\r\n    return (\r\n        <div className={p.dialogs}>\r\n            <div className={p.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={p.messages}>\r\n                <div>{messagesElements}</div>\r\n                // @ts-ignore\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\User.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\UsersSearchForm.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["220"],"import React from 'react';\nimport {connect} from \"react-redux\";\nimport {AppStateType} from '../../../redux/redux-store';\nimport {DispatchPropsType, MapPropsType,MyPosts} from \"./MyPosts\";\nimport {actions} from \"../../../redux/ProfileReducer\";\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state.profilePage.posts\n    }\n}\n\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {\n    addPost: actions.addPostActionCreator\n})(MyPosts);\n\nexport default MyPostsContainer;\n","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\common\\Paginator\\Paginator.tsx",[],["221","222"],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\Dialogitem\\Dialogitem.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\Message\\Message.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\navbar\\n2_Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["223"],"import React from 'react';\nimport s from './Post.module.css';\n\ntype PropsType = {\n    message: string\n    likesCount: number\n}\n\nconst Post: React.FC<PropsType> = (props) => {\n  return (\n    <div className={s.item}>\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\n        { props.message }\n          <div>\n        <span>like</span> { props.likesCount }\n      </div>\n    </div>\n  )\n}\n\nexport default Post;\n","C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\components\\users\\UsersPage.tsx",[],"C:\\Users\\Natali\\Desktop\\project\\earg\\Network\\src\\redux\\auth-selector.tsx",["224"],"import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state:AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const selectIsLogin = (state:AppStateType) => {\r\n    return state.auth.login\r\n}\r\n",{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":52,"column":65,"nodeType":"231","messageId":"232","endLine":52,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":28,"column":5,"nodeType":"235","messageId":"236","endLine":30,"endColumn":6},{"ruleId":"229","severity":1,"message":"230","line":55,"column":44,"nodeType":"231","messageId":"232","endLine":55,"endColumn":46},{"ruleId":"237","severity":1,"message":"238","line":5,"column":9,"nodeType":"239","messageId":"240","endLine":5,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":23,"column":36,"nodeType":"243","endLine":23,"endColumn":59},{"ruleId":"225","replacedBy":"244"},{"ruleId":"227","replacedBy":"245"},{"ruleId":"241","severity":1,"message":"242","line":5,"column":12,"nodeType":"243","endLine":5,"endColumn":53},{"ruleId":"246","severity":1,"message":"247","line":72,"column":8,"nodeType":"248","endLine":72,"endColumn":10,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":79,"column":7,"nodeType":"248","endLine":79,"endColumn":27,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":39,"column":46,"nodeType":"254","endLine":41,"endColumn":21},{"ruleId":"237","severity":1,"message":"255","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"225","replacedBy":"256"},{"ruleId":"227","replacedBy":"257"},{"ruleId":"241","severity":1,"message":"242","line":12,"column":7,"nodeType":"243","endLine":12,"endColumn":108},{"ruleId":"237","severity":1,"message":"258","line":1,"column":9,"nodeType":"239","messageId":"240","endLine":1,"endColumn":23},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","@typescript-eslint/no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["259"],["260"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["261"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["262"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'React' is defined but never used.",["259"],["260"],"'createSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"267","text":"268"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"269","text":"270"},[2268,2270],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2457,2477],"[filter, currentPage, history]"]