{"version":3,"sources":["components/Navbar/Dialogs/Dialogs.module.css","components/Navbar/Dialogs/Dialogitem/Dialogitem.jsx","components/Navbar/Dialogs/Message/Message.jsx","components/Navbar/Dialogs/Dialogs.jsx","components/Navbar/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","p","dialog","active","to","name","Message","message","maxLength50","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","key","messagesElements","messagesData","isAuth","dialogs","dialogsItems","messages","a","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,+FCWrMC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCnBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,yCCIvCC,EAAcC,YAAiB,IAwC/BC,EAAsBC,YAAU,CAACC,KAAK,kBAAhBD,EAfL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAASX,GACpBH,KAAK,iBACLe,YAAY,wBAEvB,6BACI,6CAMDC,EAxCC,SAACxB,GACb,IAAIyB,EAAOzB,EAAM0B,YACbC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAxB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMsB,IAAKzB,EAAOH,GAAIA,GAAIG,EAAOH,QAC5G6B,EAAmBN,EAAMO,aAAaH,KAAI,SAAAnB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASoB,IAAKpB,EAAQR,QAQ7G,OAAIF,EAAMiC,OAEF,yBAAK9B,UAAWC,IAAE8B,SACd,yBAAK/B,UAAWC,IAAE+B,cACbR,GAEL,yBAAKxB,UAAWC,IAAEgC,UACd,6BAAML,GACF,kBAAClB,EAAD,CAAqBG,SAbnB,SAACqB,GACfrC,EAAMsC,YAAYD,EAAEE,gBACpBF,EAAEE,eAAe,QAGD,kBAAC,IAAD,CAAUhC,GAAI,Y,uBCFvBiC,sBAAQC,aAbD,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAM,CACFJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAMHK,IADtBJ,CACwChB","file":"static/js/4.438f9c98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3LCdK\",\"dialogsItems\":\"Dialogs_dialogsItems__2AP60\",\"active\":\"Dialogs_active__124xO\",\"messages\":\"Dialogs_messages__2Yt9z\",\"message\":\"Dialogs_message__3cNqt\",\"dialog\":\"Dialogs_dialog__3ZV6F\"};","import React from 'react';\r\nimport p from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={p.dialog + ' ' + p.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport p from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={p.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport p from './Dialogs.module.css'\r\nimport DialogItem from \"./Dialogitem/Dialogitem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validatos/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength50 = maxLenghtCreator(50);\r\nconst Dialogs = (props) => {\r\n    let state= props.dialogsPage;\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n\r\n    let addNewMessage=(a)=>{\r\n        props.sendMessage(a.newMessageBody);\r\n        a.newMessageBody=\"\"\r\n    };\r\n\r\nif(!props.isAuth)return <Redirect to={'/login'}/>;\r\n    return (\r\n        <div className={p.dialogs}>\r\n            <div className={p.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={p.messages}>\r\n                <div>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst AddMessageForm = (props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required,maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst AddMessageFormRedux = reduxForm({form:\"AddMessageForm\"})(AddMessageForm);\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody)=>{\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n}};\r\n\r\n\r\nexport default compose(connect\r\n(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs)\r\n\r\n"],"sourceRoot":""}